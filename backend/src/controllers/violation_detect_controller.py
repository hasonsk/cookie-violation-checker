from typing import List
from schemas.cookie_schema import Cookie, CookieSubmissionResponse
from services.violation_detect_service.violation_detector import ViolationDetectorService

class ViolationDetectorController:
    """Controller x·ª≠ l√Ω c√°c request li√™n quan ƒë·∫øn cookies"""

    def __init__(self):
        self.cookie_service = ViolationDetectorService()

    async def submit_cookies(self, cookies: List[Cookie]) -> CookieSubmissionResponse:
        """X·ª≠ l√Ω request submit cookies"""
        print(f"\nüç™ Received cookies: {len(cookies)}")

        # L·∫•y policy m·∫∑c ƒë·ªãnh
        policy_json = self.cookie_service.get_default_policy_json()

        # Ph√¢n t√≠ch compliance
        result = self.cookie_service.analyze_cookie_compliance(cookies, policy_json)

        # Log k·∫øt qu·∫£
        self.cookie_service.log_analysis_summary(result, len(cookies))

        # Tr·∫£ v·ªÅ response
        return CookieSubmissionResponse(
            status="received",
            count=len(cookies),
            violation=result
        )
